/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package test;

/**
 *
 * @author juan
 */
public class Test {

    private static String split =
            "DOIPBIFLCVCLUPLCABCVEPLJBALJCLIBFLGDAIDOUHKFTHSIPGOYDOQPPRLJGQDMLFLCBLIGTRQYODVLODBRBVLJPEBIEUFLCDSGGDESGDCDBRLCEPOYLCOPLJGLTQLJLREPQRIBUTPRRGDGOP	QRYOLBMFUHJLGILOSGFHFBJRFLDPAFRGESFLOYTQVEHSHFPRCVFADOOZUPJGTOLJLVIGJRHTEKLCGHEUODBLPTOPTRMFGIGAGIODRPYHBIRFSHRPZFEQSGBLGTHFOMRPPIZHQPEQFLTQGHYMLCOPOXLFCOGHLRFHOPKFDOLCEQGSHFDPLFRTOVTPBVLVBABIJLJLJSBILVDGUHCVJLODPQYOTHPSZGDGSHSGGIHDFHJLTOFTGFACRPFRHPLCEQGSHFCFLHPELJRJVLIBFHLCOYLCUHJSFUBRBVRPFH ZFDYLGEUPIESOFTFRLDOHUYMHUJARFBIODFLOPESFLESDSGIFLZHZFGSKFVGGDTZRVEXIPGSFRRPRMDOOLISBILCULFTOFFLFHDGPGJLTOGDYMLCIPBIFLFHJLABCVCLIBUDHFDJSHFHOPCUBLOPFLTPFPBILCABCVEPOLGSODPRRGBVRJFHIVRLPQSGJLZAAGFARLLCRJVHDGDOJLNRYSGJRTOPIGRLDOGFJSGDEQHDTIUHCVJLZHHSHDTZSEDOOVDOHTTPSIPTQPHFHSODEJRJRILOBIBPGHEQJR JFPTPOGSODPDRJRTJRNGTOSGGBFLYMHOBLLDVGGDTZBVIJPTLCEQGSHFEAVGDMPTAFFHFBUORPPIEXIJESOYDOQPPRNGUTZHLVGVPRVLIBSAHEZHPIADDOGFTOBRRLDOTADGOPLCGDTQTHFRPSGHTRJLHYHLBDTHZFHZUHHZTZTHPERTTEEVUDTZFGJSJLLBACFOSEUHDJZHESABJIIBEQHFEALJEPHDHTTMPTPOGSQYTPHSPDPTZHBFPTOXFHPOFHDHPTTFZHDLTZLAPQBIBVLVPTPIGDCFGHHTFL EALJEPZFFHLFDGLDOUGVJZFGTZLOSGFBFHOPPIKRGFTZFHGBYMDGLDOUBPGHOFFRDGIJZHOVDOOPEXIJESOFQPTFIJBISHOLISCULCEXDGUHJFRPLCLDFBTHDOGDVJBFPERJVHDGPIKRGFTZFHGBYMDGLDOUIPVOFHTRTHFLULOFIBHTFLTQGHYMCUCUQPHFGDJVLCCLHPFHJLEGDGIBFBZAJLOUIBOPESLCHYMFPOGFHFOYZALRRPHEYGRLRVOZDOPIYSGHISSEHORJRILDSHVJFORJFHOFTPEPHT DOOPRYPESEANUHCDSGTHLCSIIPSECUCUVJBFBILJEUOLGSEPULKFGTLCOYFHUHCVJLTREGGTJGACIJESTPDMRJFHOFJGTOBLVGMFPTLFGTEXFHPIFLOXDOGHTQPTSESGNRGLTZTHDLQYPRFASELCHSTSZGOFGSRYLORPHUQPADRPLJGLTZFTGFACRPLJFATREGGTJGACIJESLCEQGSHFCVJLCVJLHSFHJLJRMDGERLGLCVJLLVBILDGTFHJLOVDGPIDOOLFQIBFAEVNRJILRFLYMLGRBHPQPADLJRJVLIBLBTRCUZFHIZGLRJLLVBAPGTZDOFLFHSIBILJHSTSZGOFGSOLGSTREGGTJGACIJESALHSPRJGDLGYJIEQPRJLFTOFBYGYJSGTLCEQGSHFCVEPZHBFPSGHODOVLFHOBLDGDOULMFDGLCABCVEPFRHPJLHYHLISRJRGFHODOVLFLUFHFLGDDALCPHHTEPEQJSIBHNIJIJIPIBPIGDFLOXLGJABISHLFLCPTEXBIFHPIOLTPTMPOLCPTLRFHOPKFDOODULMFCULCEXRLGSEXIJESJLHYHLAYPEZAPGJGACBIDOPIRBPOIBULINGHIBFLDJPTOXFZDGUHCDSGTHLCOLBDGRGTOYGDTQGIBLGTTFJSGDIHRLRLHOGFIRRPHDFRFBJICLTMPEQESHSAIJFRHPVRULGDHSYMANUHCDSGTHLCOYLADHFHOFTRHZMIRPSISELGFPDGBLGTHFJFLATUGJSGRLGHDSFODORNIJIJIJPTLOGHFLULMFDGJILRODOLMTBIGLHTSIBLPTIPIBOPFLOFHFADPTPHPTBRGFISPTOLGSEPOXCGIBTZUHDPGHHTLBUSJGTOGLCETHESFLZHRPXGTOIJFBRPFTZFDHQPRYFTDOVLFBSETHFLJLTQLJBRIBYMDOYHVHDGOFTFIJZHTRIHFNBFRLSEFNDGFHOFOLGSZHFTTOIJOFFLTQGHQYODTRTZGTPREXFRESQPGDEJSHRIQETHOFTORJCULCEQGSHFFJPTVOPTGNBRGBTGESDOLVLJBRIBIJOFTPFLTQGHYMLCOYFHUHTOBRBVRJIJLDGFMFPELAFHPIJIODGDEQISBRGLJFBLJLIGLRLYDGFLFLCFSHFTEUOLMTPSGHOFTFILGFRILCLGDMGBJFPTPHPTZSVXPSGHJGDLGYHIIBHFTDGHIYPQBIBILDQGIBADLJXERFFUOXDOLOGHFLJGDLDYFTPTLOGHFLULMFDGJILRGDTAZFPERJVHDGFHOPKFDOVRODIBULFTOFFLFHDGSEANUHCDSGTHLCOLIDLDPIHDTZLDTHQDGFTZCULCULFTOFQPBDGFTZPEPQBAIJDORJRTJRPIDMDOGFEALJEPABJIFRHPJLHYHLASDGPTATGFDMFHPTFOHOGPEXBYIGESOXCULCABCVEPOVLFLVDGFLGDOYHILJEPOXFHPQGHFLOLDMDGOLGSOYQPTZCOGHTADGLROPLRZAILLJPIKFVGGDTZRVFBKFSEGBTQBIGLJSFUBILVFHPRGDHFTPFRHPLCEQGSHFCVJLHYHLDYLFDODOOLGSRSGFTZIBTOIJOPOXLDSHDHPTSAHEZHOPVRABBYGSLJEQGSHFJVSGLCEXLCEPFLDIIJLCLJPTBLYEGTEQHFHFIAGBFRHDOXLDSHDHPTLCEQGSHFFJLDDOFZPTFOFHPIXDFTEQIJPTEPQYODOFTZRVFBKFPGHTYMDOVXRFRJFTZOPGNRHZOPVLIBCVCLABIBDOFGMTPITZDODOFTZFPQYGUHVQFAFBOPFTULKFGRCLFHLCHSHDTZSEDGDOQPMFDGNRDGLR";
    
    private static String test =
//            "DOIPBIFLCVCLUPLCABCVEPLJBALJCLIBFLGDAIDOUHKFTHSIPGOYDOQPPRLJGQDMLFLCBLIGTRQYODVLODBRBVLJPEBIEUFLCDSGGDESGDCDBRLCEPOYLCOPLJGLTQLJLREPQRIBUTPRRGDGOP"
//            + "QRYOLBMFUHJLGILOSGFHFBJRFLDPAFRGESFLOYTQVEHSHFPRCVFADOOZUPJGTOLJLVIGJRHTEKLCGHEUODBLPTOPTRMFGIGAGIODRPYHBIRFSHRPZFEQSGBLGTHFOMRPPIZHQPEQFLTQGHYMLCO"
//            + "POXLFCOGHLRFHOPKFDOLCEQGSHFDPLFRTOVTPBVLVBABIJLJLJSBILVDGUHCVJLODPQYOTHPSZGDGSHSGGIHDFHJLTOFTGFACRPFRHPLCEQGSHFCFLHPELJRJVLIBFHLCOYLCUHJSFUBRBVRPFH"
//            + "ZFDYLGEUPIESOFTFRLDOHUYMHUJARFBIODFLOPESFLESDSGIFLZHZFGSKFVGGDTZRVEXIPGSFRRPRMDOOLISBILCULFTOFFLFHDGPGJLTOGDYMLCIPBIFLFHJLABCVCLIBUDHFDJSHFHOPCUBLO"
//            + "PFLTPFPBILCABCVEPOLGSODPRRGBVRJFHIVRLPQSGJLZAAGFARLLCRJVHDGDOJLNRYSGJRTOPIGRLDOGFJSGDEQHDTIUHCVJLZHHSHDTZSEDOOVDOHTTPSIPTQPHFHSODEJRJRILOBIBPGHEQJR"
//            + "JFPTPOGSODPDRJRTJRNGTOSGGBFLYMHOBLLDVGGDTZBVIJPTLCEQGSHFEAVGDMPTAFFHFBUORPPIEXIJESOYDOQPPRNGUTZHLVGVPRVLIBSAHEZHPIADDOGFTOBRRLDOTADGOPLCGDTQTHFRPSG"
//            + "HTRJLHYHLBDTHZFHZUHHZTZTHPERTTEEVUDTZFGJSJLLBACFOSEUHDJZHESABJIIBEQHFEALJEPHDHTTMPTPOGSQYTPHSPDPTZHBFPTOXFHPOFHDHPTTFZHDLTZLAPQBIBVLVPTPIGDCFGHHTFL"
//            + "EALJEPZFFHLFDGLDOUGVJZFGTZLOSGFBFHOPPIKRGFTZFHGBYMDGLDOUBPGHOFFRDGIJZHOVDOOPEXIJESOFQPTFIJBISHOLISCULCEXDGUHJFRPLCLDFBTHDOGDVJBFPERJVHDGPIKRGFTZFHG"
//            + "BYMDGLDOUIPVOFHTRTHFLULOFIBHTFLTQGHYMCUCUQPHFGDJVLCCLHPFHJLEGDGIBFBZAJLOUIBOPESLCHYMFPOGFHFOYZALRRPHEYGRLRVOZDOPIYSGHISSEHORJRILDSHVJFORJFHOFTPEPHT"
//            + "DOOPRYPESEANUHCDSGTHLCSIIPSECUCUVJBFBILJEUOLGSEPULKFGTLCOYFHUHCVJLTREGGTJGACIJESTPDMRJFHOFJGTOBLVGMFPTLFGTEXFHPIFLOXDOGHTQPTSESGNRGLTZTHDLQYPRFASEL"
             "CHSTSZG OF GS RY LO RP HU QP AD RP LJ GL TZ FT GF AC RP LJ FA TR EG GT JG"
            + "AC IJ ES LC EQ GS HF CV JL CV JL HS FH JL JR MD GE RL GL CV JL LV BI LD"
            + "GT FH JL OV DG PI DO OL FQ IB FA EV NR JI LR FL YM LG RB HP QP AD LJ" 
            + "RJ VL IB LB TR CU ZF HI ZG LR JL LV BA PG TZ DO FL FH SI BI LJ HS TS ZG"
            + "OF GS OL GS TR EG GT JG AC IJ ES AL HS PR JG DL GY JI EQ PR JL FT OF"
            + "BY GY JS GT LC EQ GS HF CV EP ZH BF PS GH OD OV LF HO BL DG DO UL"
            + "MF DG LC AB CV EP FR HP JL HY HL IS RJ RG FH OD OV LF LU FH FL GD DA"
            + "LC PH HT EP EQ JS IB HN IJ IJ IP IB PI GD FL OX LG JA BI SH LF LC PT EX BI"
            + "FH PI OL TP TM PO LC PT LR FH OP KF DO OD UL MF CU LC EX RL GS EX"
            + "IJ ES JL HY HL AY PE ZA PG JG AC BI DO PI RB PO IB UL IN GH IB FL DJ PT"
            + "OX FZ DG UH CD SG TH LC OL BD GR GT OY GD TQ GI BL GT TF JS GD IH RL"
            + "RL HO GF IR RP HD FR FB JI CL TM PE QE SH SA IJ FR HP VR UL GD HS YM"
            + "AN UH CD SG TH LC OY LA DH FH OF TR HZ MI RP SI SE LG FP DG BL GT HF"
            + "JF LA TU GJ SG RL GH DS FO DO RN IJ IJ IJ PT LO GH FL UL MF DG JI LR OD"
            + "OL MT BI GL HT SI BL PT IP IB OP FL OF HF AD PT PH PT BR GF IS PT OL GS"
            + "EP OX CG IB TZ UH DP GH HT LB US JG TO GL CE TH ES FL ZH RP XG TO IJ"
            + "FB RP FT ZF DH QP RY FT DO VL FB SE TH FL JL TQ LJ BR IB YM DO YH VH"
            + "DG OF TF IJ ZH TR IH FN BF RL SE FN DG FH OF OL GS ZH FT TO IJ OF FL"
            + "TQ GH QY OD TR TZ GT PR EX FR ES QP GD EJ SH RI QE TH OF TO RJ CU LC"
            + "EQ GS HF FJ PT VO PT GN BR GB TG ES DO LV LJ BR IB IJ OF TP FL TQ GH"
            + "YM LC OY FH UH TO BR BV RJ IJ LD GF MF PE LA FH PI JI OD GD EQ IS BR"
            + "GL JF BL JL IG LR LY DG FL FL CF SH FT EU OL MT PS GH OF TF IL GF RI LC"
            + "LG DM GB JF PT PH PT ZS VX PS GH JG DL GY HI IB HF TD GH IY PQ BI BI"
            + "LD QG IB AD LJ XE RF FU OX DO LO GH FL JG DL DY FT PT LO GH FL UL MF"
            + "DG JI LR GD TA ZF PE RJ VH DG FH OP KF DO VR OD IB UL FT OF FL FH DG"
            + "SE AN UH CD SG TH LC OL ID LD PI HD TZ LD TH QD GF TZ CU LC UL FT OF"
            + "QP BD GF TZ PE PQ BA IJ DO RJ RT JR PI DM DO GF EA LJ EP AB JI FR HP JL"
            + "HY HL AS DG PT AT GF DM FH PT FO HO GP EX BY IG ES OX CU LC AB CV"
            + "EP OV LF LV DG FL GD OY HI LJ EP OX FH PQ GH FL OL DM DG OL GS OY QP"
            + "TZ CO GH TA DG LR OP LR ZA IL LJ PI KF VG GD TZ RV FB KF SE GB TQ BI"
            + "GL JS FU BI LV FH PR GD HF TP FR HP LC EQ GS HF CV JL HY HL DY LF DO"
            + "DO OL GS RS GF TZ IB TO IJ OP OX LD SH DH PT SA HE ZH OP VR AB BY GS"
            + "LJ EQ GS HF JV SG LC EX LC EP FL DI IJ LC LJ PT BL YE GT EQ HF HF IA GB"
            + "FR HD OX LD SH DH PT LC EQ GS HF FJ LD DO FZ PT FO FH PI XD FT EQ IJ"
            + "PT EP QY OD OF TZ RV FB KF PG HT YM DO VX RF RJ FT ZO PG NR HZ OP"
            + "VL IB CV CL AB IB DO FG MT PI TZ DO DO FT ZF PQ YG UH VQ FA FB OP FT"
            + "UL KF GR CL FH LC HS HD TZ SE DG DO QP MF DG NR DG LR"
            + "";

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
//        System.out.println("test: " + getTest().replace(" ", "")); 
        
        System.out.println("split: ");
        int aux = 0;
        for(int i = 0; i <= split.length(); i+=8){
            aux = i;
            System.out.print(split.substring(i, aux+8) + " ");
        }
        
        int cont = 0;
        int len = split.length();
        String arreglo[][] = new String[8][535];
        for (int i = 0; i < 535; i++) {
            for (int j = 0; j < 8; j++) {
                arreglo[j][i] = (cont >= len? "" : String.valueOf(split.charAt(cont)));
                cont++;
            }
        }
//        for (int i = 0; i < 585; i++) {
//            for (int j = 0; j < 6; j++) {
//                System.out.print(arreglo[5][i]);
//            }
//            System.out.print(" ");
//        }
        
        int abc[] = new int [26];
        for (int i = 0; i < 535; i++) {
            switch (arreglo[0][i]){
                case "A": abc[0]++; break;
                case "B": abc[1]++; break;
                case "C": abc[2]++; break;
                case "D": abc[3]++; break;
                case "E": abc[4]++; break;
                case "F": abc[5]++; break;
                case "G": abc[6]++; break;
                case "H": abc[7]++; break;
                case "I": abc[8]++; break;
                case "J": abc[9]++; break;
                case "K": abc[10]++; break;
                case "L": abc[11]++; break;
                case "M": abc[12]++; break;
                case "N": abc[13]++; break;
                case "O": abc[14]++; break;
                case "P": abc[15]++; break;
                case "Q": abc[16]++; break;
                case "R": abc[17]++; break;
                case "S": abc[18]++; break;
                case "T": abc[19]++; break;
                case "U": abc[20]++; break;
                case "V": abc[21]++; break;
                case "W": abc[22]++; break;
                case "X": abc[23]++; break;
                case "Y": abc[24]++; break;
                case "Z": abc[25]++; break;
                default: break;
            }
        }
        
//        System.out.println("A: " + abc[0]);
//        System.out.println("B: " + abc[1]);
//        System.out.println("C: " + abc[2]);
//        System.out.println("D: " + abc[3]);
//        System.out.println("E: " + abc[4]);
//        System.out.println("F: " + abc[5]);
//        System.out.println("G: " + abc[6]);
//        System.out.println("H: " + abc[7]);
//        System.out.println("I: " + abc[8]);
//        System.out.println("J: " + abc[9]);
//        System.out.println("K: " + abc[10]);
//        System.out.println("L: " + abc[11]);
//        System.out.println("M: " + abc[12]);
//        System.out.println("N: " + abc[13]);
//        System.out.println("O: " + abc[14]);
//        System.out.println("P: " + abc[15]);
//        System.out.println("Q: " + abc[16]);
//        System.out.println("R: " + abc[17]);
//        System.out.println("S: " + abc[18]); 
//        System.out.println("T: " + abc[19]);
//        System.out.println("U: " + abc[20]);
//        System.out.println("V: " + abc[21]);
//        System.out.println("W: " + abc[22]);
//        System.out.println("X: " + abc[23]);
//        System.out.println("Y: " + abc[24]);
//        System.out.println("Z: " + abc[25]);
        
        //Total primera columna: 530 letras
        int total = 0;
        for (int i = 0; i < 26; i++) {            
            total = total + abc[i];
        }
        System.out.println("total: " + total);
    }

    /**
     * @return the test
     */
    public static String getTest() {
        return test;
    }

    /**
     * @param test the test to set
     */
    public void setTest(String test) {
        this.test = test;
    }
    
}
